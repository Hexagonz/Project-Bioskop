/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TugasBesar.controllers;

import TugasBesar.connection.ConnectionDb;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lenovo
 */
class DataTayang {
    String id_studio, id_waktu, id_film, id_hari, date;
}

public class FormJadwalPenayangan extends javax.swing.JDialog {

    /**
     * Creates new form FormJadwalPenayangan
     */
    ConnectionDb db;
    DataTayang dt = new DataTayang();
    String dataId;
    DefaultTableModel model;
    boolean dataDitemukan, modeClndr, modeUbah, modeSimpan, modeTabel;

    public FormJadwalPenayangan() {
        initComponents();
        setLocationRelativeTo(null);
        db = new ConnectionDb();
        model = (DefaultTableModel) jTable1.getModel();
        dataDitemukan = false;
        modeClndr = false;
        modeSimpan = false;
        modeTabel = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("FORM JADWAL PENAYANGAN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(224, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(225, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("ID Jadwal    :");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Studio         :");

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Waktu        :");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", " ", " " }));
        jComboBox1.setEnabled(false);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setEnabled(false);
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Nama Film  :");

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Tanggal       :");

        jComboBox3.setEnabled(false);
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.setEnabled(false);
        jDateChooser1.setMinSelectableDate(new java.util.Date(-62135791122000L));
        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Jadwal", "Nama Film", "Studio", "Jam Tayang", "Tanggal Tayang"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Baru");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Simpan");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Ubah");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Hapus");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Batal");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(30, 30, 30)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(23, 23, 23)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(18, 18, 18)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addGap(98, 98, 98)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void tampilData() {
        try {
            db.rs = db.perintah.executeQuery("SELECT jadwal.id_jadwal,film.nama_film,studio.nama_studio,waktu.jam_mulai,date FROM "
                    + "jadwal INNER JOIN film ON jadwal.id_film=film.id_film INNER JOIN studio ON jadwal.id_studio=studio.id_studio"
                    + " INNER JOIN waktu ON jadwal.id_waktu=waktu.id_waktu ORDER BY(jadwal.date) ASC");
            model.setRowCount(0);
            model.fireTableDataChanged();
            while (db.rs.next()) {
                model.addRow(
                        new Object[]{
                            db.rs.getString("id_jadwal"),
                            db.rs.getString("nama_film"),
                            db.rs.getString("nama_studio"),
                            db.rs.getString("jam_mulai"),
                            db.rs.getString("date")
                        }
                );
            }
        } catch (SQLException e) {
            System.err.println("Query Error: Tampil  Data");
        }
    }

    private void initComboBox(String Query, String colDb, JComboBox box) {
        try {
            ArrayList<String> list = new ArrayList<String>();
            db.rs = db.perintah.executeQuery(Query);
            while (db.rs.next()) {
                list.add(db.rs.getString(colDb));
            }
            String[] str = Arrays.copyOf((Object[]) list.toArray(), list.size(), String[].class);
            DefaultComboBoxModel model = new DefaultComboBoxModel(str);
            box.setModel(model);
        } catch (SQLException ex) {
            System.err.println("SQL err: jComboBox");
        }
    }

    private String getIdBox(String Query, String name) {
        String data = null;
        try {
            db.rs = db.perintah.executeQuery(Query);
            if (db.rs.next()) {
                data = db.rs.getString(name);
            }
        } catch (SQLException e) {
            System.err.println("Err : getIdBox");
        }
        return data;
    }

    private boolean cariData(String data) {
        if (!data.equals("")) {
            try {
                db.rs = db.perintah.executeQuery("SELECT * FROM jadwal INNER JOIN film ON film.id_film=jadwal.id_film INNER JOIN "
                        + "studio ON studio.id_studio=jadwal.id_studio INNER JOIN waktu ON waktu.id_waktu=jadwal.id_waktu WHERE id_jadwal = '" + data + "'");
                if (db.rs.next()) { //data ditemukan
                    return true;
                } else { // data tidak ditemukan
                    return false;
                }
            } catch (SQLException e) {
                System.err.println("Query tak bisa");
            }
        }
        return false;
    }

    private void clear() {
        jTextField1.setText("");
        jTextField1.setEnabled(false);
        jComboBox1.setSelectedIndex(-1);
        jComboBox3.setSelectedIndex(-1);
        jComboBox1.setEnabled(false);
        jComboBox3.setEnabled(false);
        jButton1.setEnabled(true);
        jButton2.setEnabled(false);
        jButton4.setEnabled(false);
        jDateChooser1.setEnabled(false);
        jDateChooser1.setDate(null);
        jComboBox2.setEnabled(false);
        jComboBox2.setSelectedIndex(-1);
    }

    private int checkJumlahTayang() {
        int jumlah = 0;
        if (modeUbah) {
            SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");
            String date = dcn.format(jDateChooser1.getDate());
            try {
                db.rs = db.perintah.executeQuery("SELECT COUNT(*) as total FROM jadwal INNER JOIN film ON jadwal.id_film=film.id_film INNER JOIN studio ON studio.id_studio=jadwal.id_studio WHERE studio.nama_studio='" + jComboBox3.getSelectedItem() + "' and date='" + date + "'");
                if (db.rs.next()) {
                    jumlah = db.rs.getInt("total");
                }
            } catch (SQLException ex) {
                System.err.println(ex);
            }
        }
        return jumlah;
    }

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (jTextField1.getText().length() < 4) {
                JOptionPane.showConfirmDialog(this,
                        "Minimal ID harus 4 Angka", "Konfirmasi",
                        JOptionPane.PLAIN_MESSAGE, JOptionPane.OK_OPTION
                );
            } else {
                dataDitemukan = cariData(jTextField1.getText());
                if (dataDitemukan == true) {
                    int pilihan;
                    pilihan = JOptionPane.showConfirmDialog(
                            this,
                            "ID Jadwal " + jTextField1.getText() + " sudah ada! "
                            + "Apakah anda ingin mengubah/menghapus data?",
                            "Konfirmasi",
                            JOptionPane.YES_NO_OPTION
                    );
                    if (pilihan == 0) { // yes
                        try {
                            jTextField1.setEnabled(false);
                            String film = db.rs.getString("nama_film");
                            String studio = db.rs.getString("nama_studio");
                            String tgl = db.rs.getString("date");
                            initComboBox("SELECT * FROM film", "nama_film", jComboBox1);
                            jComboBox1.setSelectedItem(film);
                            System.out.println(studio);
                            initComboBox("SELECT * FROM studio", "nama_studio", jComboBox3);
                            jComboBox3.setSelectedItem(studio);
                            initComboBox(" SELECT * FROM waktu", "jam_mulai", jComboBox2);
                            jComboBox2.setSelectedItem(db.rs.getString("jam_mulai"));
                            try {
                                SimpleDateFormat dc = new SimpleDateFormat("yyyy-MM-dd");
                                Date date = dc.parse(tgl);
                                jDateChooser1.setDate(date);
                            } catch (ParseException ex) {
                                System.err.println("Date Click Err");
                            }
                            jComboBox1.setEnabled(false);
                            jComboBox2.setEnabled(false);
                            jComboBox3.setEnabled(false);
                            jDateChooser1.setEnabled(false);
                            jButton1.setEnabled(false);
                            jButton2.setEnabled(false);
                            jButton3.setEnabled(true);
                            jButton4.setEnabled(true);
                            jButton5.setEnabled(true);
                        } catch (SQLException e) {
                            System.out.println(e);
                            System.err.println("SQL Err: Cari data Jadwal");
                        }
                    } else { // no
                        jTextField1.setText("");
                        jTextField1.requestFocus();
                    }
                } else {
                    jComboBox1.setEnabled(true);
                    initComboBox("SELECT * FROM film", "nama_film", jComboBox1);
                    jButton2.setEnabled(true);
                    jButton5.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        if (jTextField1.getText().length() >= 4) {
            evt.consume();
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (dataDitemukan) {
            return;
        }
        jComboBox3.setEnabled(true);
        initComboBox("SELECT * FROM studio", "nama_studio", jComboBox3);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        if (dataDitemukan) {
            return;
        }
        jDateChooser1.setEnabled(true);
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void initTime(String studio, String date) {
        int cek = checkJumlahTayang();
        ArrayList<LocalTime> data_jam = new ArrayList<>();
        ArrayList<Integer> data_waktu = new ArrayList<>();
        try {
            db.rs = db.perintah.executeQuery("SELECT film.nama_film,waktu.jam_mulai,film.durasi_menit FROM jadwal INNER JOIN film ON "
                    + "film.id_film=jadwal.id_film INNER JOIN studio ON studio.id_studio=jadwal.id_studio INNER JOIN "
                    + "waktu ON waktu.id_waktu=jadwal.id_waktu "
                    + "WHERE studio.nama_studio='" + studio + "' AND jadwal.date='" + date + "' ORDER BY(waktu.jam_mulai) ASC");

            while (db.rs.next()) {
                String jam_mulai = db.rs.getString("jam_mulai");
                LocalTime stTyg = LocalTime.parse(jam_mulai);
                data_jam.add(stTyg);
                data_waktu.add(db.rs.getInt("durasi_menit") + 15);
            }
            LocalTime jam_mulai = null;
            for (int jam : data_waktu) {
                LocalTime comoDua = LocalTime.parse((String) jComboBox2.getSelectedItem());
                LocalTime batasBawah = comoDua.minusMinutes(jam);
                LocalTime batasAtas = comoDua.plusMinutes(jam);
                boolean masukDalamRentang = false;
                for (LocalTime jam_start : data_jam) {
                        jam_mulai = jam_start;
                    if (jam_start.isAfter(batasBawah) && jam_start.isBefore(batasAtas)) {
                        masukDalamRentang = true;
                        break;
                    }
                }
                if(cek == 1) {
                    return;
                }
                if (masukDalamRentang) {
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss");
                    jComboBox2.setSelectedItem(jam_mulai.format(formatter));                  
                    JOptionPane.showConfirmDialog(this,
                            "Jika anda memilih jam " + comoDua + " Rentan Waktu tersebut ada film yang sedang tayang dari durasi waktu " + batasAtas,
                            "Alert", JOptionPane.PLAIN_MESSAGE, JOptionPane.OK_OPTION);
                    return;
                } 
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.err.println("Err : Date Chooser");
        }
    }
    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
        if (jDateChooser1.getDate() == null || jComboBox3.getSelectedItem() == null || jComboBox1.getSelectedItem() == null) {
            return;
        }
        if (modeTabel || dataDitemukan) {
            return;
        }
        jComboBox2.setEnabled(true);
        initComboBox("SELECT * FROM  waktu", "jam_mulai", jComboBox2);
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jComboBox3.getSelectedItem() == null || jComboBox2.getSelectedItem() == null || jDateChooser1.getDate() == null) {
            JOptionPane.showConfirmDialog(this, "Tidak Boleh Ada Data Yang Kosong !!!", "Alert", JOptionPane.PLAIN_MESSAGE, JOptionPane.OK_OPTION);
            return;
        }

        dataId = getIdBox("SELECT * FROM film WHERE nama_film='" + jComboBox1.getSelectedItem() + "'", "id_film");
        dt.id_film = dataId;
        dataId = getIdBox("SELECT * FROM studio WHERE nama_studio='" + jComboBox3.getSelectedItem() + "'", "id_studio");
        dt.id_studio = dataId;
        dataId = getIdBox("SELECT * FROM waktu WHERE jam_mulai='" + (String) jComboBox2.getSelectedItem() + "'", "id_waktu");
        dt.id_waktu = dataId;
        SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");
        String date = dcn.format(jDateChooser1.getDate());
        SimpleDateFormat dayOfWeek = new SimpleDateFormat("EEEE", Locale.ENGLISH);
        String day = dayOfWeek.format(jDateChooser1.getDate());
        List days = Arrays.asList("Friday", "Saturday", "Sunday");
        String check = !days.contains(day) ? "WKDAYS" : "WKENDS";
        dt.id_hari = check;
        dt.date = date;
        if (modeSimpan == true) {
            dataDitemukan = cariData(jTextField1.getText());
            if (dataDitemukan == true) {
                JOptionPane.showMessageDialog(
                        this,
                        "Penyimpanan data mhs gagal dilakukan, "
                        + "karena nim mhs " + jTextField1.getText()
                        + " telah ada di tabel",
                        "Informasi",
                        JOptionPane.INFORMATION_MESSAGE
                );
            } else {
                try {
                    db.perintah.execute("INSERT INTO jadwal VALUES ('"
                            + jTextField1.getText() + "','"
                            + dt.id_studio + "','"
                            + dt.id_waktu + "','"
                            + dt.id_film + "','"
                            + dt.id_hari + "','"
                            + dt.date + "')");
                    tampilData();
                    modeUbah = false;
                } catch (SQLException e) {
                    System.err.println("SQL Err : Simpan Penayangan");
                    System.out.println(e);
                }
            }
        } else {
            try {
                db.perintah.execute("UPDATE jadwal SET "
                        + "id_studio = '" + dt.id_studio + "', "
                        + "id_waktu = '" + dt.id_waktu + "', "
                        + "id_film = '" + dt.id_film + "', "
                        + "id_hari = '" + dt.id_hari + "', "
                        + "date = '" + dt.date + "' "
                        + "WHERE id_jadwal = '" + jTextField1.getText() + "'"
                );
                tampilData();
            } catch (SQLException ex) {
                System.err.println("SQL Err : Update Penayangan");
                System.out.println(ex);
            }
        }
        clear();
        jTextField1.setEnabled(false);
        jComboBox1.setEnabled(false);
        jComboBox2.setEnabled(false);
        jComboBox3.setEnabled(false);
        jDateChooser1.setEnabled(false);
        jButton1.setEnabled(true);
        jButton1.requestFocus();
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
        modeUbah = false;
        modeClndr = false;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTextField1.setEnabled(true);
        jTextField1.requestFocus();
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(true);
        modeSimpan = true;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        dt.id_waktu = (String) jComboBox2.getSelectedItem();
        if (modeUbah || modeClndr) {
            SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");
            String date = dcn.format(jDateChooser1.getDate());
            initTime((String) jComboBox3.getSelectedItem(), date);
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        tampilData();
        jTextField1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
    }//GEN-LAST:event_formWindowOpened

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextField1.setEnabled(true);
        jComboBox1.setEnabled(true);
        jComboBox2.setEnabled(true);
        jComboBox3.setEnabled(true);
        jDateChooser1.setEnabled(true);
        jButton1.setEnabled(false);
        jButton2.setEnabled(true);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(true);
        jComboBox2.setSelectedItem(-1);
        modeUbah = true;
        modeSimpan = false;
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if ((jTable1.getSelectedRow() == -1) && (dataDitemukan == false)) {
            JOptionPane.showMessageDialog(this, "Silahkan pilih baris data yang akan dihapus", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int pilihan;
            pilihan = JOptionPane.showConfirmDialog(this, "Apakah anda yakin akan menghapus data?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if (pilihan == 0) {
                try {
                    db.perintah.execute("DELETE FROM jadwal WHERE id_jadwal = '" + jTextField1.getText() + "'");
                    tampilData();

                } catch (SQLException e) {
                    System.err.println("Query Error");
                }
                clear();
                jTextField1.setEnabled(false);
                jComboBox1.setEnabled(false);
                jComboBox2.setEnabled(false);
                jComboBox3.setEnabled(false);
                jDateChooser1.setEnabled(false);
                jButton1.setEnabled(true);
                jButton1.requestFocus();
                jButton2.setEnabled(false);
                jButton3.setEnabled(false);
                jButton4.setEnabled(false);
                jButton5.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jTextField1.setEnabled(false);
        jButton1.setEnabled(true);
        jButton1.requestFocus();
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
        modeUbah = false;
        modeClndr = false;
        modeTabel = false;
        clear();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedRow() >= 0) {
            modeUbah = false;
            modeTabel = true;
            jTextField1.setText(model.getValueAt(jTable1.getSelectedRow(), 0).toString());
            initComboBox("SELECT * FROM film", "nama_film", jComboBox1);
            jComboBox1.setSelectedItem(model.getValueAt(jTable1.getSelectedRow(), 1).toString());
            initComboBox("SELECT * FROM studio", "nama_studio", jComboBox3);
            String studio = model.getValueAt(jTable1.getSelectedRow(), 2).toString();
            jComboBox3.setSelectedItem(studio);
            String tgl = model.getValueAt(jTable1.getSelectedRow(), 4).toString();
            initComboBox(" SELECT * FROM waktu", "jam_mulai", jComboBox2);
            String jam = model.getValueAt(jTable1.getSelectedRow(), 3).toString();
            jComboBox2.setSelectedItem(jam);
            try {
                SimpleDateFormat dc = new SimpleDateFormat("yyyy-MM-dd");
                Date date = dc.parse(tgl);
                jDateChooser1.setDate(date);
            } catch (ParseException ex) {
                System.err.println("Date Click Err");
            }
            jDateChooser1.setEnabled(false);
            jComboBox1.setEnabled(false);
            jComboBox2.setEnabled(false);
            jComboBox3.setEnabled(false);
            jTextField1.setEnabled(false);
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
            jButton3.setEnabled(true);
            jButton3.requestFocus();
            jButton4.setEnabled(true);
            jButton5.setEnabled(true);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FormJadwalPenayangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FormJadwalPenayangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FormJadwalPenayangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FormJadwalPenayangan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FormJadwalPenayangan().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
